TEAL
Short term:
Long term:
better encapsulation\inheritance
figure out "sub-resources"
categories
topics
resources

REST_redesign

Routes:                         Trivial Example:

/categories                       All categories
/categories/{id}                  "Mathematics"
/topics                           All topics
/topics/{id}                      "PreCalculus"
/topics/{id}/category             "Mathematics"
/topics/{id}/cards                All "PreCalculus" cards
/topics/{id}/clips                All clips related to "PreCalculus"
/topics/{id}notes                 All notes related to "PreCalculus"
/resources                        All resources
/resources/{id}                   "The Calculus: 7"
/resources/{type}                 "Book"
/resources/{type}                 "Video" *other possible type
/resources/{id}/category          "Mathematics"
/resources/{id}/topics            "Calculus"
/resources/{id}/sections          Table of Contents to "The Calculus: 7"
/resources/{id}/sections/{id}     Chapter 1 of "The Calculus: 7"
/resources/{id}/cards             Cards created for "The Calculus: 7"
/resources/{id}/cards/{id}/hints  all hints for a resource
/resources/{id}/clips             all clips for a resource
/resources/{id}/notes             all notes for a resource
/clips/{id}/topics                returns a cards topic
/exercises                        returns all exercises
/resources/{id}/exercises         all exercises for "Algebra 1"



Learn JSDocs


*enter dummy data
*create resources panel
*create resources object
*create resources database logic
*populate topics array with objects
*populate topics array with relevant data only
*categories buttons generate their own function calls
*r/w to topics db
*get DELETE button working
*Learn basic unit testing
*Model pretend database
*"Quarter Panel" index.html
*Move anything in app.js to teal.js


Thoughtdump

So things are going well. It's still not useable though...

I need to build a schema object next.
